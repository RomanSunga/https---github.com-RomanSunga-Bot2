import asyncio
import sqlite3
from aiogram import Bot, Dispatcher, F, types, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
import app.keyboards as kb
import random
import requests
from bs4 import BeautifulSoup


router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
   await message.answer_sticker('CAACAgIAAxkBAAEL8npmIW5tVf_A2HOIXh7e9dPVeSTYgwACVzIAAlZfGEuQ00oChUPYQzQE')
   await message.answer_sticker('CAACAgIAAxkBAAEL8nxmIW5xuuIVlSg1jbSReusrur94PQACKiUAAua_GUtodTWTfplsujQE')
   await message.answer_sticker('CAACAgIAAxkBAAEL8n5mIW5zwuVvP-4Gbt3dOCMmSJl4eAACuS8AAgS3EEuL1jlbFPjxTTQE')
   await message.answer(f'–ü—Ä–∏–≤–µ—Ç,{message.from_user.first_name}, —è –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∞–Ω–∏–º–µ‚ò¢Ô∏è',
                        reply_markup=kb.main)

@router.message(Command('help'))
async def inst_message(message: Message):
    await message.answer("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∏–º–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–û–õ–£–ß–ò–¢–¨. –¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–∏–º–µ –ø–æ –≤–∞—à–µ–º—É –≤–∫—É—Å—É –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–¢–¨–°–Ø.")


@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å')
async def get_random_anime_link(message: Message):
    conn = sqlite3.connect('links.db')
    cursor = conn.cursor()
    cursor.execute("SELECT link FROM links ORDER BY RANDOM() LIMIT 1")
    random_anime_link = cursor.fetchone()
    if random_anime_link:
        await message.answer(f'–î–µ—Ä–∂–∏ –¥–æ—Ä–æ–≥–æ–πüòò: {random_anime_link[0]}')
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –∞–Ω–∏–º–µüòü')


def update_database():
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö links.db
    conn = sqlite3.connect('links.db')
    cursor = conn.cursor()

    # –ü–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    url = 'https://studioband.info/tops.html'
    response = requests.get(url)
    html = response.content

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
    soup = BeautifulSoup(html, 'html.parser')

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞–Ω–∏–º–µ
    anime_links = soup.find_all('a', href=True)

    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    for link in anime_links:
        cursor.execute("INSERT INTO links (link) VALUES (?)", (link['href'],))

    conn.commit()
    conn.close()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(Command('update'))
async def update(message:Message):
    if message == "/update":
        update_database()
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    else:
        print("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.")





@router.message(F.photo)
async def photo_message(message: Message):
    await message.reply("–°–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–µ–±–∏–ªü§°")

@router.message(F.text)
async def get_text(message: Message):
    await message.reply("–°–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–µ–±–∏–ªü§°")




